# /usr/src/app/public
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiAppName }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apiAppName }}
spec:
  replicas: {{ .Values.apiAppReplicas }}
  selector:
    matchLabels:
      app: {{ .Values.apiAppName }}
  template:
    metadata:
      labels:
        app: {{ .Values.apiAppName }}
    spec:
      containers:
      - name: {{ .Values.apiAppName }}
        image: {{ .Values.apiImagePath }}:{{ .Values.apiImageVers }}
        volumeMounts:
          - mountPath: /data/db
            name: api-volume
        ports:
        - containerPort: 3000
        env:
        - name: AUDIENCE_URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: auth.audience
        - name: ISSUER_URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: issuer.url
        - name: MONGO_URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: mongo.url
  volumeClaimTemplates:
    - metadata:
        name: api-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.apiStorageClassSize }}
        storageClassName: {{ .Values.apiStorageClass }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.apiAppName }}-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.apiAppName }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
